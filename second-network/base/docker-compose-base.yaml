# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

version: '2'

services:
  # orderer 的配置
  orderer.ORDERER_DOMAIN:
    container_name: orderer.ORDERER_DOMAIN
    image: hyperledger/fabric-orderer:$IMAGE_TAG
    environment:
      - ORDERER_GENERAL_LOGLEVEL=debug
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      # 这个给 orderer 准备的创世区块，看下面的 volumes 的映射。
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      # 服务器的 key
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      # 服务器的证书
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      # ca 的证书
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    # 启动命令，不像 peer，不再需要加参数了。
    command: orderer
    volumes:
    # 对创世区块的映射，注意看，这里通过映射，实现了重命名。
    - ../channel-artifacts/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
    # 对 msp 文件夹的映射
    - ../crypto-config/ordererOrganizations/ORDERER_DOMAIN/orderers/orderer.ORDERER_DOMAIN/msp:/var/hyperledger/orderer/msp
    # 对 tls 文件夹的映射
    - ../crypto-config/ordererOrganizations/ORDERER_DOMAIN/orderers/orderer.ORDERER_DOMAIN/tls/:/var/hyperledger/orderer/tls
    # 注意，这一步需要的命名卷，实际上就是要在 docker-compose-cli 里被顶层 volume 实例化
    - orderer.ORDERER_DOMAIN:/var/hyperledger/production/orderer
    ports:
      - 7050:7050
  # 这里的 peer 数量，完全是按照crypto-config 里面的 spec 来的
  peer0.ORG1_DOMAIN:
    # 经典的继承语法
    container_name: peer0.ORG1_DOMAIN
    extends:
      file: peer-base.yaml
      service: peer-base
    environment:
      - CORE_PEER_ID=peer0.ORG1_DOMAIN
      - CORE_PEER_ADDRESS=peer0.ORG1_DOMAIN:7051
      # 外部的流言地址，和本机的 peer 地址一样
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.ORG1_DOMAIN:7051
      - CORE_PEER_LOCALMSPID=Org1MSP
    volumes:
        - /var/run/:/host/var/run/
        # peer 容器必备：MSP 与 TLS 文件夹
        - ../crypto-config/peerOrganizations/ORG1_DOMAIN/peers/peer0.ORG1_DOMAIN/msp:/etc/hyperledger/fabric/msp
        - ../crypto-config/peerOrganizations/ORG1_DOMAIN/peers/peer0.ORG1_DOMAIN/tls:/etc/hyperledger/fabric/tls
        - peer0.ORG1_DOMAIN:/var/hyperledger/production
    ports:
      - 7051:7051
      - 7053:7053

  peer1.ORG1_DOMAIN:
    container_name: peer1.ORG1_DOMAIN
    extends:
      file: peer-base.yaml
      service: peer-base
    environment:
      - CORE_PEER_ID=peer1.ORG1_DOMAIN
      - CORE_PEER_ADDRESS=peer1.ORG1_DOMAIN:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.ORG1_DOMAIN:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.ORG1_DOMAIN:7051
      - CORE_PEER_LOCALMSPID=Org1MSP
    volumes:
        - /var/run/:/host/var/run/
        - ../crypto-config/peerOrganizations/ORG1_DOMAIN/peers/peer1.ORG1_DOMAIN/msp:/etc/hyperledger/fabric/msp
        - ../crypto-config/peerOrganizations/ORG1_DOMAIN/peers/peer1.ORG1_DOMAIN/tls:/etc/hyperledger/fabric/tls
        # 把外部的匿名数据卷，映射到peer容器内到生产数据卷上。这样容器通过docker compose 不断重启以后，数据还可以保持。
        - peer1.ORG1_DOMAIN:/var/hyperledger/production

    ports:
      - 8051:7051
      - 8053:7053

  peer0.ORG2_DOMAIN:
    container_name: peer0.ORG2_DOMAIN
    extends:
      file: peer-base.yaml
      service: peer-base
    environment:
      - CORE_PEER_ID=peer0.ORG2_DOMAIN
      - CORE_PEER_ADDRESS=peer0.ORG2_DOMAIN:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.ORG2_DOMAIN:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.ORG2_DOMAIN:7051
      - CORE_PEER_LOCALMSPID=Org2MSP
    volumes:
        # 这里的数据卷映射没有把etc全部映射进去，足以证明 peer 内有原生的 etc。
        - /var/run/:/host/var/run/
        - ../crypto-config/peerOrganizations/ORG2_DOMAIN/peers/peer0.ORG2_DOMAIN/msp:/etc/hyperledger/fabric/msp
        - ../crypto-config/peerOrganizations/ORG2_DOMAIN/peers/peer0.ORG2_DOMAIN/tls:/etc/hyperledger/fabric/tls
        - peer0.ORG2_DOMAIN:/var/hyperledger/production
    ports:
      - 9051:7051
      - 9053:7053
  # 所有节点的变化：
  # 1 修改 service name。
  # 2 修改 container_name
  # 3 修改本 peer 地址
  # 4 修改 gossip 相关，实际上还是本机地址
  peer1.ORG2_DOMAIN:
    container_name: peer1.ORG2_DOMAIN
    extends:
      file: peer-base.yaml
      service: peer-base
    environment:
      - CORE_PEER_ID=peer1.ORG2_DOMAIN
      - CORE_PEER_ADDRESS=peer1.ORG2_DOMAIN:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.ORG2_DOMAIN:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.ORG2_DOMAIN:7051
      - CORE_PEER_LOCALMSPID=Org2MSP
    volumes:
        - /var/run/:/host/var/run/
        - ../crypto-config/peerOrganizations/ORG2_DOMAIN/peers/peer1.ORG2_DOMAIN/msp:/etc/hyperledger/fabric/msp
        - ../crypto-config/peerOrganizations/ORG2_DOMAIN/peers/peer1.ORG2_DOMAIN/tls:/etc/hyperledger/fabric/tls
        - peer1.ORG2_DOMAIN:/var/hyperledger/production
    ports:
      - 10051:7051
      - 10053:7053

  # 新加入的 org3，可选初始化
  peer0.ORG3_DOMAIN:
    container_name: peer0.ORG3_DOMAIN
    extends:
      file: peer-base.yaml
      service: peer-base
    environment:
      - CORE_PEER_ID=peer0.ORG3_DOMAIN
      - CORE_PEER_ADDRESS=peer0.ORG3_DOMAIN:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.ORG3_DOMAIN:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.ORG3_DOMAIN:7051
      - CORE_PEER_LOCALMSPID=Org3-MSP
    volumes:
        - /var/run/:/host/var/run/
        - ../crypto-config/peerOrganizations/ORG3_DOMAIN/peers/peer0.ORG3_DOMAIN/msp:/etc/hyperledger/fabric/msp
        - ../crypto-config/peerOrganizations/ORG3_DOMAIN/peers/peer0.ORG3_DOMAIN/tls:/etc/hyperledger/fabric/tls
        - peer0.ORG3_DOMAIN:/var/hyperledger/production
    ports:
      - 11051:7051
      - 11053:7053

  peer1.ORG3_DOMAIN:
    container_name: peer1.ORG3_DOMAIN
    extends:
      file: peer-base.yaml
      service: peer-base
    environment:
      - CORE_PEER_ID=peer1.ORG3_DOMAIN
      - CORE_PEER_ADDRESS=peer1.ORG3_DOMAIN:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.ORG3_DOMAIN:7051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.ORG3_DOMAIN:7051
      - CORE_PEER_LOCALMSPID=Org3-MSP
    volumes:
        - /var/run/:/host/var/run/
        - ../crypto-config/peerOrganizations/ORG3_DOMAIN/peers/peer1.ORG3_DOMAIN/msp:/etc/hyperledger/fabric/msp
        - ../crypto-config/peerOrganizations/ORG3_DOMAIN/peers/peer1.ORG3_DOMAIN/tls:/etc/hyperledger/fabric/tls
        - peer1.ORG3_DOMAIN:/var/hyperledger/production
    ports:
      - 12051:7051
      - 12053:7053
